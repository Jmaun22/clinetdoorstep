{"ast":null,"code":"var _jsxFileName = \"/Users/jesse/Documents/Portfilo/At-Your-Door-Step-/client/src/components/DishList/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport DishItem from '../DishItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_DISHES } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_DISHES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DishList() {\n  _s();\n\n  const [state, dispatch] = useStoreContext();\n  const {\n    currentCategory\n  } = state;\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_DISHES);\n  useEffect(() => {\n    console.log(\"--------Loading---------\");\n    console.log(data);\n\n    if (data) {\n      dispatch({\n        type: UPDATE_DISHES,\n        dishes: data.dishes\n      });\n      data.dishes.forEach(dish => {\n        idbPromise('dishes', 'put', dish);\n      });\n    } else if (!loading) {\n      idbPromise('dishes', 'get').then(dishes => {\n        dispatch({\n          type: UPDATE_DISHES,\n          dishes: dishes\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterDishes() {\n    if (!currentCategory) {\n      return state.dishes;\n    }\n\n    return state.dishes.filter(dishes => dishes.category._id === currentCategory);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Our Food:  \\uD83E\\uDD57\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), state.dishes.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row-customer dish-css\",\n      children: filterDishes().map(dish => /*#__PURE__*/_jsxDEV(DishItem, {\n        _id: dish._id,\n        image: dish.image,\n        name: dish.name,\n        price: dish.price,\n        quantity: dish.quantity\n      }, dish._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"You haven't added any dishes yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: spinner,\n      alt: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 18\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DishList, \"5EFEb9FYc1KGyEUAmLNh5IMPtTo=\", false, function () {\n  return [useStoreContext, useQuery];\n});\n\n_c = DishList;\nexport default DishList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DishList\");","map":{"version":3,"names":["React","useEffect","DishItem","useStoreContext","UPDATE_DISHES","useQuery","QUERY_DISHES","idbPromise","spinner","DishList","state","dispatch","currentCategory","loading","data","console","log","type","dishes","forEach","dish","then","filterDishes","filter","category","_id","length","map","image","name","price","quantity"],"sources":["/Users/jesse/Documents/Portfilo/At-Your-Door-Step-/client/src/components/DishList/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport DishItem from '../DishItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_DISHES } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_DISHES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction DishList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_DISHES);\n\n  useEffect(() => {\n    console.log(\"--------Loading---------\")\n    console.log(data)\n    if (data) {\n      dispatch({\n        type: UPDATE_DISHES,\n        dishes: data.dishes,\n      });\n      data.dishes.forEach((dish) => {\n        idbPromise('dishes', 'put', dish);\n      });\n    } else if (!loading) {\n      idbPromise('dishes', 'get').then((dishes) => {\n        dispatch({\n          type: UPDATE_DISHES,\n          dishes: dishes,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterDishes() {\n    if (!currentCategory) {\n      return state.dishes;\n    }\n\n    return state.dishes.filter(\n      (dishes) => dishes.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\" >\n      <h2>Our Food:  ðŸ¥—</h2>\n      {state.dishes.length ? (\n        <div className=\"flex-row-customer dish-css\">\n          {filterDishes().map((dish) => (\n            <DishItem\n              key={dish._id}\n              _id={dish._id}\n              image={dish.image}\n              name={dish.name}\n              price={dish.price}\n              quantity={dish.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any dishes yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default DishList;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,OAAP,MAAoB,0BAApB;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,eAAe,EAAzC;EAEA,MAAM;IAAES;EAAF,IAAsBF,KAA5B;EAEA,MAAM;IAAEG,OAAF;IAAWC;EAAX,IAAoBT,QAAQ,CAACC,YAAD,CAAlC;EAEAL,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAR,CAAY,0BAAZ;IACAD,OAAO,CAACC,GAAR,CAAYF,IAAZ;;IACA,IAAIA,IAAJ,EAAU;MACRH,QAAQ,CAAC;QACPM,IAAI,EAAEb,aADC;QAEPc,MAAM,EAAEJ,IAAI,CAACI;MAFN,CAAD,CAAR;MAIAJ,IAAI,CAACI,MAAL,CAAYC,OAAZ,CAAqBC,IAAD,IAAU;QAC5Bb,UAAU,CAAC,QAAD,EAAW,KAAX,EAAkBa,IAAlB,CAAV;MACD,CAFD;IAGD,CARD,MAQO,IAAI,CAACP,OAAL,EAAc;MACnBN,UAAU,CAAC,QAAD,EAAW,KAAX,CAAV,CAA4Bc,IAA5B,CAAkCH,MAAD,IAAY;QAC3CP,QAAQ,CAAC;UACPM,IAAI,EAAEb,aADC;UAEPc,MAAM,EAAEA;QAFD,CAAD,CAAR;MAID,CALD;IAMD;EACF,CAnBQ,EAmBN,CAACJ,IAAD,EAAOD,OAAP,EAAgBF,QAAhB,CAnBM,CAAT;;EAqBA,SAASW,YAAT,GAAwB;IACtB,IAAI,CAACV,eAAL,EAAsB;MACpB,OAAOF,KAAK,CAACQ,MAAb;IACD;;IAED,OAAOR,KAAK,CAACQ,MAAN,CAAaK,MAAb,CACJL,MAAD,IAAYA,MAAM,CAACM,QAAP,CAAgBC,GAAhB,KAAwBb,eAD/B,CAAP;EAGD;;EAED,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGF,KAAK,CAACQ,MAAN,CAAaQ,MAAb,gBACC;MAAK,SAAS,EAAC,4BAAf;MAAA,UACGJ,YAAY,GAAGK,GAAf,CAAoBP,IAAD,iBAClB,QAAC,QAAD;QAEE,GAAG,EAAEA,IAAI,CAACK,GAFZ;QAGE,KAAK,EAAEL,IAAI,CAACQ,KAHd;QAIE,IAAI,EAAER,IAAI,CAACS,IAJb;QAKE,KAAK,EAAET,IAAI,CAACU,KALd;QAME,QAAQ,EAAEV,IAAI,CAACW;MANjB,GACOX,IAAI,CAACK,GADZ;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADD,gBAcC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBJ,EAkBGZ,OAAO,gBAAG;MAAK,GAAG,EAAEL,OAAV;MAAmB,GAAG,EAAC;IAAvB;MAAA;MAAA;MAAA;IAAA,QAAH,GAAyC,IAlBnD;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GA5DQC,Q;UACmBN,e,EAIAE,Q;;;KALnBI,Q;AA8DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}